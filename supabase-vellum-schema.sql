-- Supabase SQL Schema for Vellum-like project
-- Run this in your Supabase SQL Editor after running the initial `supabase-schema.sql`

-- Create organizations table
CREATE TABLE IF NOT EXISTS organizations (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  name TEXT NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create a junction table for users and organizations (many-to-many)
CREATE TABLE IF NOT EXISTS user_organizations (
  user_id UUID REFERENCES users(id) ON DELETE CASCADE,
  org_id UUID REFERENCES organizations(id) ON DELETE CASCADE,
  role TEXT DEFAULT 'member' NOT NULL, -- e.g., 'admin', 'member'
  PRIMARY KEY (user_id, org_id)
);

-- Create public_models table
CREATE TABLE IF NOT EXISTS public_models (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name TEXT,
    huggingface_id VARCHAR,
    size_mb BIGINT,
    parameter_count BIGINT,
    vellum_deployment_id VARCHAR,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- Create proprietary_models table
CREATE TABLE IF NOT EXISTS proprietary_models (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    org_id UUID REFERENCES organizations(id) ON DELETE CASCADE,
    name TEXT,
    version VARCHAR,
    file_path VARCHAR,
    size_mb BIGINT,
    vellum_deployment_id VARCHAR,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- Create comparison_results table
CREATE TABLE IF NOT EXISTS comparison_results (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    org_id UUID REFERENCES organizations(id) ON DELETE CASCADE,
    test_name TEXT,
    comparison_type TEXT,
    model_a_id UUID,
    model_a_type VARCHAR,
    model_b_id UUID,
    model_b_type VARCHAR,
    avg_inference_ms_a DOUBLE PRECISION,
    avg_inference_ms_b DOUBLE PRECISION,
    model_size_mb_a BIGINT,
    model_size_mb_b BIGINT,
    peak_memory_mb_a BIGINT,
    peak_memory_mb_b BIGINT,
    fps_a DOUBLE PRECISION,
    fps_b DOUBLE PRECISION,
    winner TEXT,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);


-- RLS Policies for new tables

-- Organizations
ALTER TABLE organizations ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Users can view organizations they belong to" ON organizations
  FOR SELECT USING (id IN (
    SELECT org_id FROM user_organizations WHERE user_id IN (
      SELECT id FROM users WHERE auth0_id = auth.jwt() ->> 'sub'
    )
  ));

-- User Organizations
ALTER TABLE user_organizations ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Users can view their own organization memberships" ON user_organizations
  FOR SELECT USING (user_id IN (
    SELECT id FROM users WHERE auth0_id = auth.jwt() ->> 'sub'
  ));

-- Proprietary Models
ALTER TABLE proprietary_models ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Users can view proprietary models of their organizations" ON proprietary_models
  FOR SELECT USING (org_id IN (
    SELECT org_id FROM user_organizations WHERE user_id IN (
      SELECT id FROM users WHERE auth0_id = auth.jwt() ->> 'sub'
    )
  ));

-- Public models are visible to all authenticated users
ALTER TABLE public_models ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Authenticated users can view public models" ON public_models
  FOR SELECT USING (auth.role() = 'authenticated');

-- Comparison Results
ALTER TABLE comparison_results ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Users can view comparison results of their organizations" ON comparison_results
  FOR SELECT USING (org_id IN (
    SELECT org_id FROM user_organizations WHERE user_id IN (
      SELECT id FROM users WHERE auth0_id = auth.jwt() ->> 'sub'
    )
  ));

-- Seed some data for testing
-- 1. Create a user (This will be handled by Auth0 sync)
-- 2. Create an organization
INSERT INTO organizations (name) VALUES ('My Test Organization') ON CONFLICT DO NOTHING;

-- 3. Link user to organization (You will need to get the user_id and org_id after they are created)
-- Example: INSERT INTO user_organizations (user_id, org_id) VALUES ('user-uuid-from-users-table', 'org-uuid-from-organizations-table');

-- 4. Seed a proprietary model
-- Example: INSERT INTO proprietary_models (org_id, name, version) VALUES ('org-uuid-from-organizations-table', 'My Custom Model', '1.0');
